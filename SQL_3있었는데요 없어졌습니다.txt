문제 설명
ANIMAL_INS 테이블은 동물 보호소에 들어온 동물의 정보를 담은 테이블입니다. ANIMAL_INS 테이블 구조는 다음과 같으며, ANIMAL_ID, ANIMAL_TYPE, DATETIME, INTAKE_CONDITION, NAME, SEX_UPON_INTAKE는 각각 동물의 아이디, 생물 종, 보호 시작일, 보호 시작 시 상태, 이름, 성별 및 중성화 여부를 나타냅니다.

NAME	TYPE	NULLABLE
ANIMAL_ID	VARCHAR(N)	FALSE
ANIMAL_TYPE	VARCHAR(N)	FALSE
DATETIME	DATETIME	FALSE
INTAKE_CONDITION	VARCHAR(N)	FALSE
NAME	VARCHAR(N)	TRUE
SEX_UPON_INTAKE	VARCHAR(N)	FALSE
ANIMAL_OUTS 테이블은 동물 보호소에서 입양 보낸 동물의 정보를 담은 테이블입니다. ANIMAL_OUTS 테이블 구조는 다음과 같으며, ANIMAL_ID, ANIMAL_TYPE, DATETIME, NAME, SEX_UPON_OUTCOME는 각각 동물의 아이디, 생물 종, 입양일, 이름, 성별 및 중성화 여부를 나타냅니다. ANIMAL_OUTS 테이블의 ANIMAL_ID는 ANIMAL_INS의 ANIMAL_ID의 외래 키입니다.

NAME	TYPE	NULLABLE
ANIMAL_ID	VARCHAR(N)	FALSE
ANIMAL_TYPE	VARCHAR(N)	FALSE
DATETIME	DATETIME	FALSE
NAME	VARCHAR(N)	TRUE
SEX_UPON_OUTCOME	VARCHAR(N)	FALSE
관리자의 실수로 일부 동물의 입양일이 잘못 입력되었습니다. 보호 시작일보다 입양일이 더 빠른 동물의 아이디와 이름을 조회하는 SQL문을 작성해주세요. 이때 결과는 보호 시작일이 빠른 순으로 조회해야합니다.

예시
예를 들어, ANIMAL_INS 테이블과 ANIMAL_OUTS 테이블이 다음과 같다면

ANIMAL_INS

ANIMAL_ID	ANIMAL_TYPE	DATETIME	INTAKE_CONDITION	NAME	SEX_UPON_INTAKE
A350276	Cat	2017-08-13 13:50:00	Normal	Jewel	Spayed Female
A381217	Dog	2017-07-08 09:41:00	Sick	Cherokee	Neutered Male
ANIMAL_OUTS

ANIMAL_ID	ANIMAL_TYPE	DATETIME	NAME	SEX_UPON_OUTCOME
A350276	Cat	2018-01-28 17:51:00	Jewel	Spayed Female
A381217	Dog	2017-06-09 18:51:00	Cherokee	Neutered Male
SQL문을 실행하면 다음과 같이 나와야 합니다.

ANIMAL_ID	NAME
A381217	Cherokee




-- 답

SELECT ANIMAL_INS.ANIMAL_ID, ANIMAL_INS.NAME 
FROM ANIMAL_INS
JOIN ANIMAL_OUTS 
ON (ANIMAL_INS.ANIMAL_ID = ANIMAL_OUTS.ANIMAL_ID)
WHERE ANIMAL_INS.DATETIME > ANIMAL_OUTS.DATETIME 
ORDER BY ANIMAL_INS.DATETIME;

-- 해설

INS 테이블에서 id와 name을 가져온다. INS 테이블에 OUTS테이블을 조인시켜서 공통된 요소들을 결합, ANIMAL_ID 테이블을 기준으로 한다. INS 테이블이 OUTS 테이블보다 늦었을 경우 (datetime이 이후일 때) 에만 불러온다.


-- 
SELECT I.animal_id, O.name
    FROM animal_ins I
        JOIN animal_outs O USING (animal_id)
WHERE I.datetime > O.datetime
ORDER BY I.datetime;

-- 

** 
자연 조인(Natural Join)

자연 조인은 등가 조인하는 방법 중 하나이다.
동일한 타입과 이름을 가진 컬럼을 조인 조건으로 이용하는 조인을 간단히 표현하는 방법이다.

자연 조인은 테이블간에 동일한 형식을 갖는 공통 컬럼이 반드시 하나만 존재해야 한다.
ex) I 테이블과 O 테이블에서 공통되는 컬럼은 오직 id여야만 한다. 이름, 혹은 중성화 타입이 같아서는 안됨

이럴 경우 USING 절을 이용한 조인문을 이용하면 조인문을 구사할 수 있다.

**

ins와 outs의 약자를 생성, 둘을 자연조인 시킨 후, using절을 통해 공통되는 컬럼이 (animal_id)로 묶이게 됨을 명시함. 제약조건으로 I의 datetime이 O의 datetime보다 이후인 경우에만 불러오도록 설정.



